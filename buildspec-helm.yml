version: 0.2
env:
  variables:
    REGION: "us-east-1"
    CLUSTER_NAME: "Cell_1_eks_cluster"
    ASSUME_ROLE_ARN: "arn:aws:iam::440493266294:role/s3servicecatalog"
phases:
  install:
    commands:
      - echo "Installing Helm..."
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      - chmod 700 get_helm.sh
      - ./get_helm.sh

  build:
    commands:
      # generate secrets
      - SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id cba_demo_app_secrets --query SecretString --output text)
      - |
        cat <<EOF > secrets.yml
        apiVersion: v1
        kind: Secret
        metadata:
          name: spree-ecomm-secrets
          namespace: spree-ecomm
        data:
        EOF
      - |
        echo "$SECRET_JSON" | jq -r 'to_entries[] | "\(.key): \(.value | @base64)"' | while IFS=: read key value; do
          echo "  $key: $value" >> secrets.yml
        done
      - cp secrets.yml helm/templates/
     # Assuming cluster role
      - echo "Updating kubeconfig for the EKS cluster..."
      - |
        ASSUME_ROLE_OUTPUT=$(aws sts assume-role --role-arn "$ASSUME_ROLE_ARN" --role-session-name eks_role)
        export AWS_ACCESS_KEY_ID=$(echo "$ASSUME_ROLE_OUTPUT" | jq -r '.Credentials.AccessKeyId')
        export AWS_SECRET_ACCESS_KEY=$(echo "$ASSUME_ROLE_OUTPUT" | jq -r '.Credentials.SecretAccessKey')
        export AWS_SESSION_TOKEN=$(echo "$ASSUME_ROLE_OUTPUT" | jq -r '.Credentials.SessionToken')

      - aws eks --region "$REGION" update-kubeconfig --name "$CLUSTER_NAME"
     # Package helm release
      - echo "Packaging the Helm chart..."
      - helm package helm
      - |
        if [[ -z $(helm list | grep spree-ecomm) ]]; then
          helm install spree-ecomm spree-ecomm-0.1.tgz --dry-run
          helm install spree-ecomm spree-ecomm-0.1.tgz
        
        else
          helm upgrade spree-ecomm spree-ecomm-0.1.tgz --dry-run
          helm upgrade spree-ecomm spree-ecomm-0.1.tgz
        fi
